import l,{Duration as y}from"edgedb";import{createClient as u}from"edgedb";var n=class{constructor(e){this.config=e;this.create=async e=>await this.client.transaction(async t=>{let{id:i}=await this.e.insert(this.eType,e).run(t);return await this.e.select(this.eType,()=>({...this.eFields,filter_single:{id:i}})).run(t)});this.updateById=async(e,t)=>await this.e.update(this.eType,()=>({set:t,filter_single:{id:e}})).run(this.client);this.findAll=async()=>await this.e.select(this.eType,()=>({...this.eFields})).run(this.client);this.findById=async e=>await this.e.select(this.eType,()=>({...this.eFields,filter_single:{id:e}})).run(this.client);this.deleteById=async e=>await this.e.delete(this.eType,()=>({filter_single:{id:e}})).run(this.client);this.findByField=async(e,t)=>await this.e.select(this.eType,s=>({...this.eFields,filter_single:this.e.op(s[e],"=",this.e.uuid(t))})).run(this.client);this.findAllByField=async(e,t)=>await this.e.select(this.eType,s=>({...this.eFields,filter:this.e.op(s[e],"=",this.e.uuid(t))})).run(this.client);this.findByFields=async e=>await this.e.select(this.eType,()=>({...this.eFields,filter_single:e})).run(this.client);e.client&&("options"in e.client||(this.client=l(e.client)),this.client=this.client.withConfig({session_idle_transaction_timeout:y.from({seconds:10}),allow_bare_ddl:"AlwaysAllow"}).withRetryOptions({attempts:3,backoff:t=>2**t*100+Math.random()*100})),this.e=this.config.edgedb,this.typeName=this.config.type,this.eType=this.e[this.typeName],this.eFields=this.eType["*"]}};export{n as CRUDService,u as createClient};
//# sourceMappingURL=index.mjs.map